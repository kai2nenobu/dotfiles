[[snippets]]
  description = "SSLハンドシェイクをテストする"
  command = "openssl s_client -connect <server=www.example.com>:<port=443> -showcerts"
  tag = ["openssl"]
  output = "CONNECTED(00000180)\r\ndepth=2 C = US, O = DigiCert Inc, OU = www.digicert.com, CN = DigiCert Global Root CA\r\nverify return:1\r\ndepth=1 C = US, O = DigiCert Inc, CN = DigiCert SHA2 Secure Server CA\r\nverify return:1\r\ndepth=0 C = US, ST = California, L = Los Angeles, O = Internet Corporation for Assigned Names and Numbers, OU = Technology, CN = www.example.org\r\nverify return:1\r\n---\r\nCertificate chain\r\n 0 s:C = US, ST = California, L = Los Angeles, O = Internet Corporation for Assigned Names and Numbers, OU = Technology, CN = www.example.org\r\n   i:C = US, O = DigiCert Inc, CN = DigiCert SHA2 Secure Server CA\r\n-----BEGIN CERTIFICATE-----\r\nMIIHQDCCBiigAwIBAgIQD9B43Ujxor1NDyupa2A4/jANBgkqhkiG9w0BAQsFADBN\r\n(snip)\r\n"

[[snippets]]
  description = "HMACアルゴリズムでメッセージダイジェストを算出する"
  command = "openssl dgst -hex -sha256 -hmac \"Key of MAC\" <files...=->"
  tag = ["openssl"]
  output = ""

[[snippets]]
  description = "Connect to MySQL Server"
  command = "mysql --host \"<hostname>\" --user \"<user>\" --password <password> \"<database>\""
  tag = ["mysql"]
  output = ""

[[snippets]]
  description = "Execute SQL query"
  command = "mysql --host \"<hostname>\" --user \"<user>\" --password <password> -e \"<query=SELECT 1>\" \"<database>\""
  tag = ["mysql"]
  output = ""

[[snippets]]
  description = "chocolateyのソースリポジトリを追加する"
  command = "choco source add --name \"name\" --source \"url\""
  tag = ["chocolatey"]
  output = ""

[[snippets]]
  description = "コマンド置換/Command substitution in cmd.exe"
  command = "@for /f \"usebackq tokens=1 delims=\" %i in (`<command>`) do <next_command=@echo %i>"
  tag = ["cmd"]
  output = ""

[[snippets]]
  description = "Read a password with mask"
  command = " @for /f \"usebackq delims=\" %i in (`powershell -Command \"$p = Read-Host '<prompt=Enter password>' -AsSecureString; $p = [Runtime.InteropServices.Marshal]::SecureStringToBSTR($p); $p = [Runtime.InteropServices.Marshal]::PtrToStringAuto($p); echo $p\"`) do @set <variable=PASS>=%i"
  tag = ["cmd"]
  output = ""

[[snippets]]
  description = "Add UTF-8 BOM by sed"
  command = "sed -b '1s/^\\(\\xef\\xbb\\xbf\\)\\?/\\xef\\xbb\\xbf/' \"file\""
  output = ""

[[snippets]]
  description = "Remove UTF-8 BOM by sed"
  command = "sed -b '1s/^\\(\\xef\\xbb\\xbf\\)//' \"file-with-bom\""
  output = ""

[[snippets]]
  description = "Register an additional public key (-f option is required)"
  command = "ssh-copy-id -f -i \"<newly_register_key.pub>\" -o \"IdentityFile <already_registered_key.pub>\" <remote_host>"
  tag = ["ssh"]
  output = ""

[[snippets]]
  description = "Sample Snippet"
  command = "echo sample"
  tag = ["sample"]
  output = "sample"

[[snippets]]
  description = "Show security protocol (SSL/TLS)"
  command = "[Net.ServicePointManager]::SecurityProtocol"
  tag = ["powershell"]
  output = ""

[[snippets]]
  description = "Enable the local proxy in cmd.exe"
  command = "set \"http_proxy=http://localhost:8888\" && set \"https_proxy=http://localhost:8888\" && set \"no_proxy=localhost\""
  tag = ["cmd"]
  output = ""

[[snippets]]
  description = "Enable the local proxy in powershell"
  command = "$env:http_proxy = 'http://localhost:8888'; $env:https_proxy = 'http://localhost:8888'; $env:no_proxy = 'localhost'; [System.Net.WebRequest]::DefaultWebProxy = New-Object System.Net.WebProxy('http://localhost:8888')"
  tag = ["powershell"]
  output = ""

[[snippets]]
  description = "Enable the local proxy in bash"
  command = "export http_proxy=http://localhost:8888 && export https_proxy=http://localhost:8888 && export no_proxy=localhost"
  tag = ["bash"]
  output = ""

[[snippets]]
  description = "Allow only restricted security protocol (SSL/TLS)"
  command = "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12"
  tag = ["powershell"]
  output = ""

[[snippets]]
  description = "Initialize project by Gradle"
  command = "gradle init --dsl <dsl=groovy> --type <type=java-library> --package <package=com.example> --project-name <project name=java-example> --test-framework <test framework=junit-jupiter>"
  tag = ["gradle"]
  output = ""
