name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: '1.1.4'
      - name: Create poetry virtualenv
        run: poetry install
        working-directory: ansible
      - name: Lint
        run: make lint
  vm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-18.04']
    steps:
      - uses: actions/checkout@v2
      - name: Copy dotfiles
        run: cp -avr "${{ github.workspace }}" ~
      - name: Run the bootstrap script
        run: bash -e bootstrap.sh
      - name: Apply ansible playbook
        run: . /opt/ansible-venv/bin/activate && cd ~/dotfiles/ansible && ansible-playbook -i localhost, test.yml
      - name: Apply ansible playbook again
        run: . /opt/ansible-venv/bin/activate && cd ~/dotfiles/ansible && ansible-playbook -i localhost, test.yml
  container:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        image: ['ubuntu:20.04', 'ubuntu:18.04']
    steps:
      - uses: actions/checkout@v2
      - name: Launch a target container
        run: >-
          docker run -d --name target --init -v "$PWD:/root/dotfiles" -w /root/dotfiles
          ${{ matrix.image }} tail -f
      - name: Run the bootstrap script
        run: docker exec target bash -c "./bootstrap.sh"
      - name: Apply ansible playbook
        run: >-
          docker exec target bash -c
          ". /opt/ansible-venv/bin/activate && cd ansible && ansible-playbook -i localhost, test.yml"
      - name: Apply ansible playbook again
        run: >-
          docker exec target bash -c
          ". /opt/ansible-venv/bin/activate && cd ansible && ansible-playbook -i localhost, test.yml"
      - name: Kill the target container
        run: docker rm --force target
  wsl:
    runs-on: windows-2019
    strategy:
      matrix:
        distribution: ['Ubuntu-20.04', 'Ubuntu-18.04']
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
      - uses: actions/checkout@v2
      - uses: Vampire/setup-wsl@v1
        with:
          distribution: ${{ matrix.distribution }}
          set-as-default: 'true'
          wsl-shell-user: wsl
      - name: Enable no password sudo by user
        shell: cmd
        run: >-
          wsl.exe --user root bash -c "echo 'wsl ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"
      - name: Copy dotfiles
        run: mkdir -p ~/dotfiles && cp -avr . ~/dotfiles
      - name: Run the bootstrap script
        run: ./bootstrap.sh
      - name: Apply ansible playbook
        run: . /opt/ansible-venv/bin/activate && cd ~/dotfiles/ansible && ansible-playbook -i localhost, test.yml
      - name: Apply ansible playbook again
        run: . /opt/ansible-venv/bin/activate && cd ~/dotfiles/ansible && ansible-playbook -i localhost, test.yml
