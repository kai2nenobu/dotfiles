name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: '1.1.4'
      - name: Create poetry virtualenv
        run: poetry install
        working-directory: ansible
      - name: Lint
        run: make lint
  vm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-18.04']
    steps:
      - uses: actions/checkout@v2
      - name: Run the bootstrap script
        run: bash -e bootstrap.sh
      - name: Generate a vault password
        run: tr -dc A-Za-z0-9 < /dev/urandom | head -c 32 > ~/.ansible_vault_pass
      - name: Apply ansible playbook
        run: ansible-playbook -i localhost, test.yml
        working-directory: ansible
  container:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        image: ['ubuntu:20.04', 'ubuntu:18.04']
    steps:
      - uses: actions/checkout@v2
      - name: Launch a target container
        run: >-
          docker run -d --name target --init -v "$PWD:/root/dotfiles" -w /root/dotfiles
          ${{ matrix.image }} tail -f
      - name: Run the bootstrap script
        run: docker exec target bash -c "./bootstrap.sh"
      - name: Generate a vault password
        run: >-
          docker exec target bash -c
          "tr -dc A-Za-z0-9 < /dev/urandom | head -c 32 > ~/.ansible_vault_pass"
      - name: Apply ansible playbook
        run: >-
          docker exec target bash -c
          "cd ansible && ansible-playbook -i localhost, test.yml"
      - name: Kill the target container
        run: docker rm --force target
