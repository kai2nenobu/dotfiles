- name: Validate the role precondition
  tags: [validation]
  import_tasks: validate_precondition.yml
- name: Update apt cache
  tags: [package]
  become: yes
  apt:
    update_cache: yes
    cache_valid_time: 3600
- name: Install ansible module requirements
  tags: [package]
  become: yes
  apt:
    name:
      - gpg  # for ansible.builtin.apt_key
- name: Configure runtime icon
  tags: [config]
  become: yes
  copy:
    src: runtime-icon.sh
    dest: /etc/profile.d/runtime-icon.sh
    mode: "0644"
- name: Keep proxy env for sudo
  tags: [config]
  become: yes
  when: ansible_facts.user_id != 'root'
  copy:
    dest: /etc/sudoers.d/proxy_env
    content: |
      Defaults env_keep += "http_proxy"
      Defaults env_keep += "https_proxy"
      Defaults env_keep += "no_proxy"
    mode: "0440"
- name: Configure pipenv
  # Create a virtualenv for pipenv in the project directory
  tags: [config]
  become: yes
  copy:
    dest: /etc/profile.d/pipenv.sh
    content: export PIPENV_VENV_IN_PROJECT=true
    mode: "0644"
- name: Configure man to install all manuals
  tags: [config]
  become: yes
  file:
    path: /etc/dpkg/dpkg.cfg.d/excludes
    state: absent
- name: Add a gpg key for emacs ppa repository
  tags: [package]
  become: yes
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FF0E01EEAAFC9CD
    state: present
- name: Add an emacs ppa repository
  tags: [package]
  become: yes
  apt_repository:
    repo: deb http://ppa.launchpad.net/kelleyk/emacs/ubuntu  {{ ansible_facts.distribution_release }} main
    state: present
- name: Add a gpg key for docker apt repository
  tags: [package]
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
- name: Add a docker apt repository
  tags: [package]
  become: yes
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_facts.distribution_release }} stable
    state: present
- name: Uninstall needless packages
  tags: [package]
  become: yes
  apt:
    name:
      - emacs26
      - emacs26-common
      - emacs26-el
    state: absent
- name: Install development packages
  tags: [package]
  become: yes
  apt:
    name:
      - cmigemo
      - connect-proxy
      - curl
      - emacs27
      - fonts-ipafont
      - fonts-ipaexfont
      - git
      - info
      - language-pack-ja
      - man-db
      - manpages
      - manpages-dev
      - nodejs
      - npm
      - python3-pip
      - python3-setuptools
      - python3-venv
      - tmux
      #- ubuntu-wsl
      - x11-xserver-utils
      - zsh
    state: present
- name: Install development packages on Ubuntu 20.04 or later
  tags: [package]
  become: yes
  when: ansible_facts.distribution_version is version('20.04', '>=')
  block:
    - name: Install fd
      apt:
        name:
          - fd-find
        state: present
    - name: Create a symbolic link to fd binary # because "fd-find" locates fd binary on /usr/bin/fdfind
      file:
        src: /usr/lib/cargo/bin/fd
        dest: /usr/bin/fd
        state: link
- name: Install utility packages
  tags: [package]
  become: yes
  apt:
    name:
      - socat
- name: Install serverspec dependencies
  tags: [package]
  become: yes
  apt:
    name:
      - build-essential
      - libffi-dev
      - ruby-bundler
      - ruby-dev
    state: present
- name: Install docker CLI
  tags: [package]
  become: yes
  apt:
    name: docker-ce-cli
    state: present
  when: ansible_facts.env.GITHUB_ACTIONS is not defined
- name: Install .deb packages
  tags: [package]
  become: yes
  apt:
    deb: "{{ item.url }}"
  when: item.condition | default(true)
  loop:
    # ripgrep
    - url: https://github.com/BurntSushi/ripgrep/releases/download/12.1.1/ripgrep_12.1.1_amd64.deb
    # delta
    - url: https://github.com/dandavison/delta/releases/download/0.5.1/git-delta_0.5.1_amd64.deb
      condition: "{{ ansible_facts.distribution_version is version('20.04', '>=') }}"
    # bat
    - url: https://github.com/sharkdp/bat/releases/download/v0.17.1/bat_0.17.1_amd64.deb
    # fzf
    - url: http://mirrors.kernel.org/ubuntu/pool/universe/f/fzf/fzf_0.24.3-1_amd64.deb
- import_tasks: install_ghq.yml
- include_tasks: install_hackgen.yml
  tags: [package]
  loop:
    - name: HackGen
      version: v2.2.3
      checksum: sha256:81dc942372856d7d7d0e3f8a1ecef11471e23161dce25165f0cddc01bcef62f1
    - name: HackGenNerd
      version: v2.2.3
      checksum: sha256:7ce5ea01ab88443f30de461e8b614cbeaed10a7fc9580902922646a1134158f0
  loop_control:
    loop_var: font
- name: Install pip tools
  tags: [package]
  become: yes
  pip:
    name: pipenv
    executable: pip3
- name: Install node tools
  tags: [package]
  become: yes
  npm:
    name: "{{ item }}"
    global: yes
  loop:
    - prettier
    - textlint
    - textlint-rule-preset-ja-technical-writing
    - textlint-rule-preset-ja-spacing
    - textlint-rule-prh
    - textlint-filter-rule-comments
- name: Create a parent directory of config files
  tags: [config]
  become: no
  file:
    path: "~/{{ item.dest | dirname }}"
    state: directory
    mode: '0755'
  loop: "{{ symlink_config_files }}"
  when: item.condition | default(true)
- name: Link to config files
  tags: [config]
  become: no
  file:
    src: "~/dotfiles/{{ item.src }}"
    path: "~/{{ item.dest }}"
    state: link
    force: yes
  loop: "{{ symlink_config_files }}"
  when: item.condition | default(true)
- name: Create a parent directory of config dirs
  tags: [config]
  become: no
  file:
    path: "~/{{ item.dest | dirname }}"
    state: directory
    mode: '0755'
  loop: "{{ symlink_config_dirs }}"
  when: item.condition | default(true)
- name: Link to config dirs
  tags: [config]
  become: no
  file:
    src: "~/dotfiles/{{ item.src }}"
    path: "~/{{ item.dest }}"
    state: link
    force: yes
  loop: "{{ symlink_config_dirs }}"
  when: item.condition | default(true)
- name: Configure git
  tags: [config]
  become: no
  git_config: "{{ {'scope':'global'} | combine(item) }}" # デフォルトのスコープを global にする
  with_items:
    - "{{ git_configs }} "
    - "{{ _git_configs | default([]) }}"
