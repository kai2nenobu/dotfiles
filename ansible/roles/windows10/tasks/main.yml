- name: 環境変数を設定する
  tags: [configuration]
  win_environment:
    level: user
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { name: "EDITOR", value: "emacsclient" }
    - { name: "FZF_DEFAULT_OPTS", value: '--reverse --inline-info --bind "ctrl-k:kill-line,ctrl-m:accept,ctrl-v:page-down,alt-v:page-up"' }
    - { name: "HOME", value: "{{ ansible_env.USERPROFILE }}" }
    - { name: "LANG", value: "ja_JP.UTF-8" }
    - { name: "MSYS", value: "winsymlinks:nativestrict" }
    - { name: "MSYS2_PATH_TYPE", value: "inherit" }
    - { name: "VAGRANT_DEFAULT_PROVIDER", value: "hyperv" }
    - { name: "MY_CMDER_CONFIG", value: "{{ ansible_env.USERPROFILE }}\\.cmder\\config" }
    # ref. https://devblogs.microsoft.com/commandline/share-environment-vars-between-wsl-and-windows/
    - { name: "WSLENV", value: "USERPROFILE/p:http_proxy:https_proxy:no_proxy" }
- name: 設定ファイルのシンボリックリンクをはる
  tags: [configuration]
  include_tasks: tasks/link_config_file.yml
  with_items:
    - { src: ".bash_aliases", dest: ".bash_aliases" }
    - { src: ".bashrc", dest: ".bashrc" }
    - { src: ".profile", dest: ".profile" }
    - { src: ".profile", dest: ".zprofile" }
    - { src: ".tmux.conf", dest: ".tmux.conf" }
    - { src: ".zsh_aliases", dest: ".zsh_aliases" }
    - { src: ".zshrc", dest: ".zshrc" }
    - { src: "dot.ahk", dest: "dot.ahk" }
  loop_control:
    loop_var: config_file
- name: ssh-agentサービスを有効にする
  tags: [service]
  win_service:
    name: ssh-agent
    start_mode: delayed
    state: started
- name: OpenSSHサーバのサービスを確実に停止する
  tags: [service]
  win_service:
    name: '{{ item }}'
    start_mode: disabled
    state: stopped
  with_items:
    - sshproxy
    - sshbroker
  ignore_errors: yes  # 未インストールの場合はエラーになるので無視
- name: clink_inputrcをコピーする
  # シンボリックリンクが動作しないので仕方ないがコピーですます
  # ref. https://github.com/mridgers/clink/issues/461
  tags: [configuration]
  win_copy:
    src: '%USERPROFILE%\dotfiles\clink_inputrc'
    dest: '%USERPROFILE%\clink_inputrc'
    remote_src: True
- name: ローカルツールディレクトリを作成する
  tags: [configuration]
  win_file:
    path: '%USERPROFILE%\.local\bin'
    state: directory
- name: ローカルツールディレクトリにパスを通す
  tags: [configuration]
  win_path:
    scope: user
    elements: '%USERPROFILE%\.local\bin'
    state: present
- name: 設定ディレクトリのシンボリックリンクをはる
  tags: [configuration]
  include_tasks: tasks/link_config_dir.yml
  with_items:
    - { src: ".zsh.d", dest: ".zsh.d" }
    - { src: "utils", dest: "utils" }
  loop_control:
    loop_var: config_dir
- name: utilsディレクトリのパスを通す
  tags: [configation]
  win_path:
    scope: user
    elements:
      - '%USERPROFILE%\utils'
    state: present
- name: 自作パッケージ用のChocolateyソースを追加する
  tags:
    - package
  win_chocolatey_source:
    name: kai2nenobu
    state: present
    source: https://www.myget.org/F/kai2nenobu
- name: Chocolateyパッケージをインストールする
  tags:
    - package
  win_chocolatey:
    name:
      - 1password4
      - 7zip
      - a5m2
      - adoptopenjdk
      - adoptopenjdk8
      - cmdermini
      - cmigemo
      - emacs
      - Firefox
      - fzf
      - git
      - GoogleChrome
      - GoogleJapaneseInput
      - gradle
      - graphviz
      - jq
      - mape
      - nkf
      - peco
      - sakuraeditor
      - Sudo
      - vcxsrv
      - vscode
      - winmerge
      - zoomit
    state: latest
- name: Chocolateyパッケージをインストールする（依存除く）
  tags:
    - package
  # 依存パッケージを一緒にインストールすると問題があるパッケージたちは
  # 別途インストールする。
  win_chocolatey:
    name:
      - plantuml
      - spring-boot-cli
    state: latest
    ignore_dependencies: true
## TODO: Cmderを /C オプション付きで起動するショートカット or タスクバーアイコンを
##   作成するタスクが必要。
- name: Cmderのユーザ個別設定ディレクトリを作成する
  # ref. https://github.com/cmderdev/cmder/blob/master/README.md#shared-cmder-install-with-non-portable-individual-user-config
  tags: [configuration, cmder]
  win_file:
    path: '%MY_CMDER_CONFIG%'
    state: directory
- name: Cmderの設定をコピーする
  tags: [configuration, cmder]
  win_copy:
    src: '%USERPROFILE%\dotfiles\cmder\{{ item }}'
    dest: '%MY_CMDER_CONFIG%\{{ item }}'
    remote_src: True
  with_items:
    - prompt.lua
    - settings
    - user-ConEmu.xml
    - user_aliases.cmd
    - user_profile.cmd
- name: playbook適用日時を保存する
  win_copy:
    dest: C:\ansible_applied.txt
    content: "{{ ansible_date_time.iso8601 }}"
